@model Kermesse.Models.Usuario

@{
    ViewBag.Title = "Creando usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Creando usuario</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Usuario</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger mb-2" })
            <div class="form-group">
                @Html.LabelFor(model => model.userName, htmlAttributes: new { @class = "control-label col-md-2 mb-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control mb-2", maxLength = "40", @oninput = "lowerOnly(event)" } })
                    @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger mb-2" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.pwd, htmlAttributes: new { @class = "control-label col-md-2 mb-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pwd, new { htmlAttributes = new { @class = "form-control mb-2", maxLength = "45" } })
                    @Html.ValidationMessageFor(model => model.pwd, "", new { @class = "text-danger mb-2" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.nombres, htmlAttributes: new { @class = "control-label col-md-2 mb-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nombres, new { htmlAttributes = new { @class = "form-control mb-2", maxLength = "45" } })
                    @Html.ValidationMessageFor(model => model.nombres, "", new { @class = "text-danger mb-2" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.apellidos, htmlAttributes: new { @class = "control-label col-md-2 mb-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.apellidos, new { htmlAttributes = new { @class = "form-control mb-2", maxLength = "45" } })
                    @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger mb-2" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2 mb-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control mb-2", maxLength = "45" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger mb-2" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2 mb-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control mb-2", type = "number", min = "0", @oninput = "onlyZeroOne(event)" } })
                    @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger mb-2" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Crear" class="btn btn-success " />
                </div>
            </div>
        </div>
    }

    <div>
        <div class="mb-1">
            <button type="button" class="btn btn-primary">
                @Html.ActionLink("Regresar", "Index", null, new { @class = "text-light" })
            </button>
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
